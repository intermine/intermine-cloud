compose:
  name: intermine-compose
  replicaCount: 1
  image:
    repository: intermine/compose
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 9991
  resources:
    limits:
      cpu: 100m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 256Mi
  readinessProbe:
    path: "/api/v1/status/"
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 6
  livenessProbe:
    path: "/api/v1/status/"
    initialDelaySeconds: 60
    periodSeconds: 30
  nodeSelector: {}
  tolerations: []
  affinity: {}
  ingress:
    enabled: false
    annotations:
      # nginx.ingress.kubernetes.io/rewrite-target: /
      # kubernetes.io/ingress.class: nginx
      # nginx.ingress.kubernetes.io/ssl-redirect: \"false\"
      # kubernetes.io/tls-acme: "true"
    # paths: ["/*"]
    # hosts:
    #   - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

configurator:
  name: intermine-configurator
  replicaCount: 1
  image:
    repository: intermine/configurator
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8080
  resources:
    limits:
      cpu: 100m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 256Mi
  readinessProbe:
    path: "/"
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 6
  livenessProbe:
    path: "/"
    initialDelaySeconds: 60
    periodSeconds: 30
  nodeSelector: {}
  tolerations: []
  affinity: {}
  ingress:
    enabled: true
    annotations:
      # nginx.ingress.kubernetes.io/rewrite-target: /
      # kubernetes.io/ingress.class: nginx
      # nginx.ingress.kubernetes.io/ssl-redirect: \"false\"
      # kubernetes.io/tls-acme: "true"
    # paths: ["/*"]
    # hosts:
    #   - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

wizard:
  name: intermine-wizard
  replicaCount: 1
  image:
    repository: intermine/configurator
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8080
  resources:
    limits:
      cpu: 100m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 256Mi
  readinessProbe:
    path: "/"
    initialDelaySeconds: 60
    periodSeconds: 30
    failureThreshold: 6
  livenessProbe:
    path: "/"
    initialDelaySeconds: 60
    periodSeconds: 30
  nodeSelector: {}
  tolerations: []
  affinity: {}
  ingress:
    enabled: true
    annotations:
      # nginx.ingress.kubernetes.io/rewrite-target: /
      # kubernetes.io/ingress.class: nginx
      # nginx.ingress.kubernetes.io/ssl-redirect: \"false\"
      # kubernetes.io/tls-acme: "true"
    # paths: ["/*"]
    # hosts:
    #   - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
ingress:
    enabled: false
    annotations:
      # nginx.ingress.kubernetes.io/rewrite-target: /
      # kubernetes.io/ingress.class: nginx
      # nginx.ingress.kubernetes.io/ssl-redirect: \"false\"
      # kubernetes.io/tls-acme: "true"
    # paths: ["/*"]
    # hosts:
    #   - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

postgresql:
  name: postgresql
  port: "5432"
  postgresqlPassword: postgres
  postgresqlDatabase: composedb
  persistence:
    size: 2Gi
  # persistence.storageClass: 
  # persistence.accessModes:
  resources:
    limits:
      cpu: 250m
      memory: 600Mi
    requests:
      cpu: 250m
      memory: 256Mi

redis:
  name: redis
  password: redis

rook-ceph:
  name: rook-ceph
  # This path is specific to GCP. Change if using on different cloud 
  agent:
    flexVolumeDirPath: /home/kubernetes/flexvolume

solr:
  name: solr
  volumeClaimTemplates:
    storageSize: 2Gi
    # storageClassName:
    # accessModes: